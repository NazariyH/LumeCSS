// Mixin with alert color
@mixin alert-color($color: map-get($theme-color-palette, 'primary')) {
    // Border style
    @include base-border-style();
    border-color: $color;

    // Divider color
    .divider {
        background-color: rgba(map-get($theme-color-palette, "dark"), 0.7)
    }

    // Btn close, btn arrow colors
    .btn-close::after,
    .btn-close::before,
    .btn-arrow::after,
    .btn-arrow::before {
        background-color: rgba(map-get($theme-color-palette, "dark"), 0.7)
    }

    // Background color
    background-color: generate-shade($color, 80, 'lighten');
}

// Base alert styles
.alert {
    padding: $base-padding;
    margin: $base-margin 0;
    color: rgba(map-get($theme-color-palette, "dark"), 0.7);
    transition: all $base-transition-time ease-out;
    @include alert-color();
    @include fade-animation($repetition-amount: 1);
    // Alert heading style
    .alert-heading {
        font-size: $base-heading-font-size;
    }

    // Divider styles
    .divider {
        margin: $base-margin 0;
    }

    // Alert icon styles
    .icon {
        margin-right: $base-margin;
    }

    // SlideInFadeRight effect
    &.\@slideInFadeRight {
        &.removing {
            transform: translateX(100%);
            opacity: 0;
        }
    }

    // SlideInFadeLeft effect
    &.\@slideInFadeLeft {
        &.removing {
            transform: translateX(-100%);
            opacity: 0;
        }
    }

    // SlideInFadeDown effect
    &.\@slideInFadeDown {
        &.removing {
            transform: translateY(100%);
            opacity: 0;
        }
    }

    // SlideInFadeUp
    &.\@slideInFadeUp {
        &.removing {
            transform: translateY(-100%);
            opacity: 0;
        }
    }

    // SlideRight effect
    &.\@slideRight {
        &.removing {
            transform: translateX(100%);
        }
    }

    // SlideLeft effect
    &.\@slideLeft {
        &.removing {
            transform: translateX(-100%);
        }
    }

    // SlideUp effect
    &.\@slideUp {
        &.removing {
            transform: translateY(-100%);
        }
    }

    // SlideDown effect
    &.\@slideDown {
        &.removing {
            transform: translateY(100%);
        }
    }

    // Fade effect
    &.\@fade {
        &.removing {
            opacity: 0;
        }
    }
}


// Iterate over each key-val pair in the $theme-color-palette
@each $key, $val in $theme-color-palette {
    // Create alert classes for each color
    .alert-#{$key} {
        @include alert-color($val);
    }

    // Iterate over each bp_key, bp_val pair in the $breakpoints
    @each $bp_key, $bp_val in $breakpoints {
        @media (min-width: $bp_val) {
            // Generate alert color classes for each breakpoint
            .#{$bp_key}\:alert-#{$key} {
                @include alert-color($val);
            }
        }
    }
}