// Mixin for the shaking animation
@mixin shake-animation($duration: 0.5s, $intensity: 10px, $repetition-amount: infinite) {
    @keyframes shake {
        0% {
            transform: translateX(0);
        }
        25% {
            transform: translateX(-$intensity);
        }
        50% {
            transform: translateX($intensity);
        }
        75% {
            transform: translateX(-$intensity);
        }
        100% {
            transform: translateX(0);
        }
    }

    animation: shake $duration ease-in-out $repetition-amount;
}

// Mixin for the bounce animation
@mixin bounce-animation($duration: 2s, $offset: 1rem, $repetition-amount: infinite) {
    @keyframes bounce {
        0% {
            transform: translateY(-100%);
        }
        20% {
            transform: translateY(0);
        }
        40% {
            transform: translateY(-#{$offset});
        }
        60% {
            transform: translateY(0);
        }
        80% {
            transform: translateY(-#{$offset/2});
        }
        100% {
            transform: translateY(0);
        }
    }

    animation: bounce $duration ease $repetition-amount;
}

// Mixin for the spin animation
@mixin spinner-animation($duration: 1s, $timing: linear, $repetition-amount: infinite) {
    @keyframes spin {
        0% {
            transform: rotate(0deg);
        }
        100% {
            transform: rotate(360deg);
        }
    }

    // Create animation for spinner
    animation: spin $duration $timing $repetition-amount;
}

// Mixin for the fade animation
@mixin fade-animation($duration: 1s, $timing: linear, $repetition-amount: infinite) {
    @keyframes fade {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }

    animation: fade $duration $timing $repetition-amount;
}

// Base border style
@mixin base-border-style() {
    border-radius: $base-border-radius;
    border-style: solid;
    border-width: $base-border-sickness / 2;
    border-color: generate-shade(map-get($base-color-palette, "gray"), 30, 'lighten');
}

// It is used for active accordion, list-group-item etc
@mixin active-object-color() {
    $color: map-get($theme-color-palette, "primary");

    background-color: $color;
    color: get-contrast-color($color);
}